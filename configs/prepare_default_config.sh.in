#!/bin/sh
#
# Copyright (C) 2015,2016 CESNET
#
# LICENSE TERMS
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# ALTERNATIVELY, provided that this notice is retained in full, this
# product may be distributed under the terms of the GNU General Public
# License (GPL) version 2 or later, in which case the provisions
# of the GPL apply INSTEAD OF those given above.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.

prefix="@prefix@"
exec_prefix="@exec_prefix@"
includedir="@includedir@"
libdir="@libdir@"
datarootdir="@datarootdir@"
datadir="@datadir@"
pkgdatadir="@pkgdatadir@"
sysconfdir="@sysconfdir@"

if [ "$1" = "configonly" ]; then

        prep_script_path="`dirname \"$0\"`"
        prep_script_path="`( cd \"$prep_script_path\" && pwd )`"
        if [ -z "$prep_script_path" ] ; then
          exit 1  # cannot access the script path
        fi

        # Input xml file with the template
        input_file_name="supervisor_config_template.xml"
        input_file_path="$prep_script_path"/"$input_file_name"
        # Generated xml config file
        output_file_name="supervisor_config.xml"
        output_file_path="$prep_script_path"/"$output_file_name"

        tmp_output_file=`mktemp`

        if ls "$input_file_path" >/dev/null 2>/dev/null; then
                # template and .sup files in the same directory as the prep script
                local_files="1"
        else
                # after installation state
                input_file_path="${pkgdatadir}"/"$input_file_name"
                output_file_path="${sysconfdir}"/"$output_file_name"
                local_files="0"
        fi

        # Init tmp output file
        echo -n "" > "$tmp_output_file"

        # Parse the input file with template and replace "include" parts with corresponding parts from .sup files:
        cat "$input_file_path" | while read line; do
                sup_file_name="$(echo "$line" | sed -n 's/^\s*<!--\s*include\s\s*\([^ ]*\)\s*-->.*/\1/p')";
                if [ "$local_files" -eq "1" ]; then
                        sup_file="$prep_script_path"/"$sup_file_name"
                else
                        sup_file="${pkgdatadir}"/"$sup_file_name"
                fi
                inlined="$(echo $sup_file | xargs cat 2> /dev/null)"
                echo -n "$inlined" >> "$tmp_output_file";
                if test -z "$inlined"; then
                        echo "$line" >> "$tmp_output_file";
                fi;
        done

        # Format the final output:
        xmllint --format "$tmp_output_file" > "$output_file_path" 2> /dev/null

        if [ $? -ne 0 ]; then
                echo "Warning: xmllint is not installed or does not have permissions to write, cannot format the final $output_file_path file"
                cat "$tmp_output_file" > "$output_file_path"
                if [ $? -ne 0 ]; then
                        echo "Error: does not have write permissions to $output_file_path file"
                        exit 1 # failure
                fi
        fi

        # Delete tmp output file
        rm -f "$tmp_output_file"

elif [ "$1" = "install" ]; then
# creation of needed directories and permissions setup

        if ls *.mkdir >/dev/null 2>/dev/null; then
                directories=*.mkdir
        else
                directories="${pkgdatadir}"/*.mkdir
        fi
        for f in $directories; do
                for d in `cat "$f"`; do
                        mkdir -p "$d"
                        ## This is not secure enough! It grants full access to the directory:
                        #chmod 777 "$d"
                        if getent passwd nemead > /dev/null && getent group nemead; then
                                chown nemead:nemead "$d"
                        fi
                done
        done
else
        echo "This script expects one argument: 'configonly' or 'install'.

        'configonly': creates a config file for Nemea-Supervisor using *.sup files.
        'install':    runs 'configonly' and also creates directories from *.mkdir files.

        Note: root permissions are probably needed for 'install'"
fi

